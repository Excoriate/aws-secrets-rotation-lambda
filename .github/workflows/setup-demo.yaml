---
name: Setup Demo Config

on:
    workflow_dispatch:
        inputs:
            option:
                description: Either 'Create' or 'Destroy' is allowed.
                required: true
                default: Create
                type: choice
                options:
                    - Create
                    - Destroy

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: us-east-1
    # Specific implementation configuration.
    TF_STATE_BUCKET_REGION: eu-central-1
    TF_STATE_BUCKET: platform-tfstate-account-sandbox
    TF_STATE_LOCK_TABLE: platform-tfstate-account-sandbox
    TF_REGISTRY_GITHUB_ORG: Excoriate
    TF_REGISTRY_BASE_URL: git::https://github.com
    TF_VAR_aws_region: us-east-1
    TF_VAR_environment: dev
    TF_VAR_rotator_lambda_name: demo
    # The /dev/ part of the below secret path should be concise with the TF_VAR_environment variable.
    TF_VAR_secret_name: /dev/us-east-1/secrets-manager-rotator-demo/my-demo-secret-to-rotate-1
    TF_VAR_rotation_schedule: cron(0 7/4 * * ? *)
    TF_VAR_rotation_lambda_enabled: true
    TF_VERSION: v1.4.6
    TG_VERSION: v0.42.8

jobs:
    rotator-ci:
        name: Rotator CI
        runs-on: ubuntu-latest
        steps:
            - name: Check out current repository
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '>=1.20.0'

            - name: Compile Dagger pipeline
              working-directory: pipeline/dagger
              run: |
                  go mod tidy
                  go build -o pipeline-dagger
                  if [ -f "../../pipeline-dagger" ]; then rm ../../pipeline-dagger; fi
                  mv pipeline-dagger ../../pipeline-dagger


            - name: Compile
              run: |
                  ./pipeline-dagger lambda --compile --lambda-src=src/lambda/secrets-manager-rotator-go

            - name: Store Dagger pipeline
              uses: actions/upload-artifact@v3
              with:
                  name: pipeline
                  path: |
                      pipeline-dagger

            - name: Store Compiled Lambda
              uses: actions/upload-artifact@v3
              with:
                  name: compiled-rotator
                  path: |
                      output/lambda-bin/linux/amd64/secrets-manager-rotator-lambda

    compile-zip:
        needs: rotator-ci
        name: Generate Zip
        runs-on: ubuntu-latest
        steps:
            - name: Check out current repository
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '>=1.20.0'

            - name: Download Pipeline
              uses: actions/download-artifact@v3
              with:
                  name: pipeline

            - name: Download Compiled Rotator
              uses: actions/download-artifact@v3
              with:
                  name: compiled-rotator

            - name: Current files in WorkDir
              run: ls -ltrah

            - name: Make pipeline executable
              run: |
                  chmod +x pipeline-dagger

            - name: Generate Zip
              run: |
                  ./pipeline-dagger lambda --package-zip --existing-binary=secrets-manager-rotator-lambda

            - name: Store Zip File
              uses: actions/upload-artifact@v3
              with:
                  name: lambda-zip
                  path: |
                      output/lambda-zip/linux/amd64/secrets-manager-rotator-lambda.zip


    create-deployment-bucket:
        needs: [rotator-ci, compile-zip]
        name: Create Deployment Bucket
        runs-on: ubuntu-latest
        steps:
            - name: Check out current repository
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '>=1.20.0'

            - name: Download Pipeline
              uses: actions/download-artifact@v3
              with:
                  name: pipeline

            - name: Make pipeline executable
              run: |
                  chmod +x pipeline-dagger

            - name: Deployment bucket plan
              run: |
                  ./pipeline-dagger infra --component=bucket --plan


            - name: Deployment bucket plan
              run: |
                  ./pipeline-dagger infra --component=bucket --deploy


    deploy-lambda-package:
        needs: [rotator-ci, compile-zip, create-deployment-bucket]
        name: Deploy lambda package
        runs-on: ubuntu-latest
        steps:
            - name: Check out current repository
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '>=1.20.0'

            - name: Download Pipeline
              uses: actions/download-artifact@v3
              with:
                  name: pipeline

            - name: Make pipeline executable
              run: |
                  chmod +x pipeline-dagger

            - name: Download Package ZIP file
              uses: actions/download-artifact@v3
              with:
                  name: lambda-zip

            - name: Deploy into S3
              run: |
                  ./pipeline-dagger lambda --upload-to-s3 --s3-bucket=${{TF_VAR_environment}}-${{TF_VAR_aws_region}}-secrets-manager-rotator-deployments-${{TF_VAR_rotator_lambda_name}} \
                    --s3-destination-path=releases \
                    --s3-file-to-upload=secrets-manager-rotator-lambda.zip
